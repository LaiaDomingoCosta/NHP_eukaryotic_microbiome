---
title: "Batch effect"
author: "Laia Domingo Costa"
format: html
editor: visual
---

# Load libraries

```{r}
library(ggplot2)
library(tidyverse)
library(RColorBrewer)
library(readr)
library(mixOmics)
library(stringr)
library(ComplexHeatmap)
```

# Load data

```{r}
sgb_abundance <-read.table("DATA/metaphlan_sgb_rel_abund_perc.tsv",row.names = 1, sep = '\t',header = T)
sgb_abundance = as.data.frame(t(sgb_abundance))
metadata = read_delim("DATA/Metadata_concat_final_euk.tsv", delim = "\t", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE)
```

# Preprocessing

```{r}
# Prefiltering
sgb.index.keep <- which(colSums(sgb_abundance)*100/(sum(colSums(sgb_abundance))) > 0.01)
sgb.count.keep <- sgb_abundance[, sgb.index.keep]
dim(sgb.count.keep)
# Adding offset
sgb.count.keep <- sgb.count.keep + 1
# Centered log-ratio transformation
sgb.clr <- logratio.transfo(sgb.count.keep, logratio = 'CLR')
class(sgb.clr) <- 'matrix' 
```

# Batch effect detection

Perform different exploratory analisis to detect batch effect in the DNA extraction kit and the instrument of sequenciation variables.

## Boxplots

Exploration of batch effect with boxplots in the SGB 13.

```{r}
sgb.before.df <- data.frame(value = sgb.clr[,13], batch = metadata$DNA_extraction_kit)
ggplot(sgb.before.df, aes(x = value, fill = batch)) + 
  geom_boxplot(alpha = 0.5) + scale_fill_manual(values = color.mixo(1:10)) + 
  labs(title = 'SGB13', x = 'Value', fill = 'DNA_extraction_kit (batch)') + 
  theme_bw() + theme(plot.title = element_text(hjust = 0.5), 
                     panel.grid = element_blank())
ggsave("Graficas/Batch_effect/Boxplot_DNA_13.png")

sgb.before.df <- data.frame(value = sgb.clr[,13], batch = metadata$instrument_model)
ggplot(sgb.before.df, aes(x = value, fill = batch)) + 
  geom_boxplot(alpha = 0.5) + scale_fill_manual(values = color.mixo(1:10)) + 
  labs(title = 'SGB13', x = 'Value', fill = 'instrument_model (batch)') + 
  theme_bw() + theme(plot.title = element_text(hjust = 0.5), 
                     panel.grid = element_blank())
ggsave("Graficas/Batch_effect/Boxplot_instrument_13.png")
```

Exploration of batch effect with boxplots in the SGB 54.

```{r}
sgb.before.df <- data.frame(value = sgb.clr[,54], batch = metadata$DNA_extraction_kit)
ggplot(sgb.before.df, aes(x = value, fill = batch)) + 
  geom_boxplot(alpha = 0.5) + scale_fill_manual(values = color.mixo(1:10)) + 
  labs(title = 'SGB54', x = 'Value', fill = 'DNA_extraction_kit (batch)') + 
  theme_bw() + theme(plot.title = element_text(hjust = 0.5), 
                     panel.grid = element_blank())
ggsave("Graficas/Batch_effect/Boxplot_DNA_54.png")

sgb.before.df <- data.frame(value = sgb.clr[,54], batch = metadata$instrument_model)
ggplot(sgb.before.df, aes(x = value, fill = batch)) + 
  geom_boxplot(alpha = 0.5) + scale_fill_manual(values = color.mixo(1:10)) + 
  labs(title = 'SGB54', x = 'Value', fill = 'instrument_model (batch)') + 
  theme_bw() + theme(plot.title = element_text(hjust = 0.5), 
                     panel.grid = element_blank())
ggsave("Graficas/Batch_effect/Boxplot_instrument_54.png")
```

## PCA

```{r}
# PCA
sgb.pca <- pca(sgb_abundance, ncomp = 10)
pca_res = as.data.frame(sgb.pca$variates$X)
expl_var = (sgb.pca$prop_expl_var$X / sum(sgb.pca$prop_expl_var$X)) * 100

# Plots
ggplot(pca_res, aes(x=PC1,y=PC2)) +
  geom_point(aes(color=metadata$DNA_extraction_kit, shape=metadata$host_lifestyle)) +
  xlab(str_glue("PC1 {format(round(expl_var['PC1'], 2), nsmall = 2)} %")) +
  ylab(str_glue("PC2 {format(round(expl_var['PC2'], 2), nsmall = 2)} %")) +
  labs(color = "DNA extraction kit", shape = "Lifestyle") +
  theme(legend.key.height= unit(0.01, 'cm'),
        legend.key.width= unit(0.01, 'cm'),
        legend.text = element_text(size=8))

ggsave("Graficas/Batch_effect/pca_DNA.png", bg="transparent")

ggplot(pca_res, aes(x=PC1,y=PC2)) +
  geom_point(aes(color=metadata$host_specie, shape=metadata$DNA_extraction_kit)) +
  xlab(str_glue("PC1 {format(round(expl_var['PC1'], 2), nsmall = 2)} %")) +
  ylab(str_glue("PC2 {format(round(expl_var['PC2'], 2), nsmall = 2)} %")) +
  labs(color = "Specie", shape = "DNA extraction kit") +
  theme(legend.key.height= unit(0.01, 'cm'),
        legend.key.width= unit(0.01, 'cm'),
        legend.text = element_text(size=8))

ggsave("Graficas/Batch_effect/pca_Instrument.png", bg="transparent")

```

## Heatmap

Heatmap of Gorilla gorilla

```{r}
metadata_gg = metadata %>% filter(host_specie == 'Gorilla gorilla')
sgb.clr_gg = sgb.clr[metadata_gg$sample_name,]

# scale on OTUs
sgb.clr.scale <- scale(sgb.clr_gg, center = T, scale = T) 
# scale on samples
sgb.clr.scale <- scale(t(sgb.clr.scale), center = T, scale = T) 

# Create color palete for the DNA_extraction_kit
batch_colors = colorRampPalette(brewer.pal(3, name="Paired"))(length(na.exclude(unique(metadata$DNA_extraction_kit))))
names(batch_colors)=na.exclude(unique(metadata$DNA_extraction_kit))
# Create color palete for the lifestyle
lifestyle_colors = c("Wild"="#96dcf0","Intermediate" = "#dbe899","Captive"="#e17084")

# Create the legend
column_ha = HeatmapAnnotation(lifestyle = metadata_gg$host_lifestyle,
                              `DNA extraction kit`=metadata_gg$DNA_extraction_kit,
                              col = list(lifestyle= lifestyle_colors,
                                         `DNA extraction kit` = batch_colors))

# Create the heatmap
png("Graficas/Batch_effect/Heatmap.png", bg="transparent")
Heatmap(sgb.clr.scale,
        name = "Abundance",
        column_title = "species-level genome bin (SGB)",
        row_title = "Gorilla gorilla samples",
        cluster_rows = FALSE,
        show_row_names = FALSE,
        show_column_names = FALSE,
        top_annotation = column_ha)
dev.off()
```
