---
title: "Eukdetect prevalence study (species)"
author: "Laia Domingo Costa"
format: html
editor: visual
---

## Load libreries

```{r}
library(readr)
library(ComplexHeatmap)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
```

## Load data

```{r}
metadata = read.csv("DATA/merged_NHP_7jun2024_concatenated_final_metadata.tsv", header = T, sep='\t', na.strings=c("","NA"))
track_table = read.csv("DATA/NHP_7jun2024_concatenated_tracktable.tsv", header = T, sep='\t', na.strings=c("","NA"))
presence_absence_sp_table = read_delim("DATA/nhp_13jun2023_euk_presence_absence_species_table_def.tsv", delim = "\t", escape_double = FALSE, trim_ws = TRUE)
taxonomy_sp_table = read_delim("DATA/nhp_13jun2024_euk_taxonomy_species_table.tsv", delim = "\t", escape_double = FALSE, trim_ws = TRUE)
```

## Filter f1

Filter samples by 1700000 reads and check for all absent taxids

```{r}
summary(track_table$bowtie2)
table(track_table$bowtie2 > 1700000)

# Adds the number of reads of each sample
metadata = left_join(metadata, track_table, join_by(sample_name==Sample)) %>% select(-input_raw_reads, -fastp)
colnames(metadata)[colnames(metadata)=="bowtie2"] = "reads"
```

```{r}
#Get list of samples of interest / Filter low sequencing samples (f1)
samples_interest = track_table$Sample[track_table$bowtie > 1700000]
presence_absence_sp_table_f1 = presence_absence_sp_table[presence_absence_sp_table$Sample %in% samples_interest,]
```

All samples pass the filter

```{r}
#Get list of genus taxids
species_taxids = as.character(taxonomy_sp_table$TaxID)

#Check if there was any genus with all 0 after filtering f1
for (specie in species_taxids) {
  if (sum(presence_absence_sp_table_f1[,specie]) == 0) {
    print(specie)
  }
}
```

There are no species taxid nulls.

## Tables by individual

### Presence-absence tables

```{r}
#Add individual column
presence_absence_sp_table_f1_ind = merge(metadata[,c("sample_name","individual_id")],presence_absence_sp_table_f1,by.x="sample_name",by.y="Sample")
#Drop sample name
presence_absence_sp_table_f1_ind = presence_absence_sp_table_f1_ind[,!(names(presence_absence_sp_table_f1_ind) %in% c("sample_name"))]
#Sum values by individual
appearences_by_ind_sp_table_f1 = presence_absence_sp_table_f1_ind %>% group_by(individual_id) %>% summarise(across(everything(), sum), .groups = 'drop') %>% as.data.frame()
#Get presence-absence table
##Make copy to work on
presence_absence_by_ind_sp_table_f1 = appearences_by_ind_sp_table_f1
##Update rownames
rownames(presence_absence_by_ind_sp_table_f1)=presence_absence_by_ind_sp_table_f1$individual_id
##Remove individuals column
presence_absence_by_ind_sp_table_f1[,1] <- NULL
##Change all values > 0 to 1
presence_absence_by_ind_sp_table_f1[presence_absence_by_ind_sp_table_f1>0] <- 1
```

### Metadata

```{r}
metadata_f1 = metadata[metadata$sample_name %in% samples_interest,]
metadata_interest_4_ind_f1 = metadata_f1[,c("individual_id","country","continent","host_specie","host_lifestyle","season","primate_group","primate_NCBI_taxonomy", "reads")]
metadata_interest_4_ind_f1$host_lifestyle = metadata_interest_4_ind_f1$host_lifestyle %>% trimws
metadata_ind_interest_f1 = metadata_interest_4_ind_f1 %>% summarise(distinct(., individual_id, .keep_all = TRUE), .groups = 'drop') %>% as.data.frame()
```

## Combination 3 main variables

```{r}
#Number of unique combinations
unique(paste(metadata_ind_interest_f1$host_specie,metadata_ind_interest_f1$host_lifestyle))
length(unique(paste(metadata_ind_interest_f1$host_specie, metadata_ind_interest_f1$host_lifestyle)))
```

```{r}
#Number of individuals per combination
n_ind_by_comb = sort(table(paste(metadata_ind_interest_f1$host_specie,"|",metadata_ind_interest_f1$host_lifestyle,"|",metadata_ind_interest_f1$country)))
n_ind_by_comb
```

```{r}
#Taxid by total individuals
sort(colSums(presence_absence_by_ind_sp_table_f1))
```

```{r}
#Number of genera by individual
print("Summary of Number of genera by individual:")
summary(rowSums(presence_absence_by_ind_sp_table_f1))
#Quick Frecuency by individual
print("Number of Individuals by Genera detected:")
table(rowSums(presence_absence_by_ind_sp_table_f1))
```

## Filter f2

Filter Combinations with low number of individuals (at least 5 individuals)

```{r}
#Get combs of interest
combs_5_or_more = names(n_ind_by_comb)[n_ind_by_comb>=5]

#Add combs column to metadata
metadata_ind_interest_f1$comb <- paste(metadata_ind_interest_f1$host_specie,"|",metadata_ind_interest_f1$host_lifestyle,"|",metadata_ind_interest_f1$country)
#Merge comb column with presence_absence_by_ind_genus_table_f1
presence_absence_by_ind_sp_table_f1_comb = merge(metadata_ind_interest_f1[,c("individual_id","comb")],presence_absence_by_ind_sp_table_f1,by.y = 0, by.x = "individual_id")
#Drop individuals column
presence_absence_by_ind_sp_table_f1_comb$individual <- NULL
#Filter low ind combs
presence_absence_by_ind_sp_table_f1_comb_f2 = presence_absence_by_ind_sp_table_f1_comb[presence_absence_by_ind_sp_table_f1_comb$comb %in% combs_5_or_more,]

# Filter the metadata
metadata_ind_interest_f1_f2 = metadata_ind_interest_f1[metadata_ind_interest_f1$comb %in% combs_5_or_more,]

#Mean in presence-absence data is equivalent to prevalence
prevalence_table_ind_sp_f1_comb_f2 = presence_absence_by_ind_sp_table_f1_comb_f2 %>% group_by(comb) %>% summarise(across(everything(), mean), .groups = 'drop') %>% as.data.frame()

# Drop individual_id
prevalence_table_ind_sp_f1_comb_f2$individual_id = NULL
```

```{r}
# Quick exploration of max prevalence values
print("Max prevalence values per taxid")
head(sort(apply(prevalence_table_ind_sp_f1_comb_f2, 2, max)), -1)
```

## Format prevalence table

```{r}
#Change row names to comb values
rownames(prevalence_table_ind_sp_f1_comb_f2) <- prevalence_table_ind_sp_f1_comb_f2$comb
#Drop comb column
prevalence_table_ind_sp_f1_comb_f2$comb <- NULL
#Change taxids for genus-name(taxid)
final_tax_names=c()
for (taxid in names(prevalence_table_ind_sp_f1_comb_f2)) {
  temp_taxonomy = taxonomy_sp_table[taxonomy_sp_table$TaxID==taxid,]
  temp_tax_name = paste(temp_taxonomy$species,'(',temp_taxonomy$TaxID,')',sep = "")
  final_tax_names = c(final_tax_names, temp_tax_name)
}
names(prevalence_table_ind_sp_f1_comb_f2) <- final_tax_names
```

## Filter f3

Filter taxids with max prev lower than 0.1(10% of individuals)

```{r}
max_prev_per_taxids = sort(apply(prevalence_table_ind_sp_f1_comb_f2, 2, max))
taxids_of_interest_0.1 = names(max_prev_per_taxids)[max_prev_per_taxids>=0.1]
prevalence_table_ind_sp_f1_comb_f2_f3= prevalence_table_ind_sp_f1_comb_f2[, taxids_of_interest_0.1]
```

```{r}
#Drop individuals columns
metadata_combs = metadata_ind_interest_f1_f2
metadata_combs$individual <- NULL

#unique values per comb
metadata_combs_uniq = metadata_combs %>% summarise(distinct(., comb, .keep_all = TRUE), .groups = 'drop') %>% arrange(comb) %>% as.data.frame()

#Add number of individuals per comb
#Check that the order matches (all true in this case)
metadata_combs_uniq$n_individuals <- table(paste(metadata_ind_interest_f1_f2$host_specie,"|",metadata_ind_interest_f1_f2$host_lifestyle,"|",metadata_ind_interest_f1_f2$country))

# Add reads number per combination
reads_comb = metadata_combs %>%
  group_by(comb) %>%
  summarise(avg=mean(reads))

metadata_combs_uniq = left_join(metadata_combs_uniq, reads_comb, by="comb")
```

## Filter f4

Filter primates wihtout eukariotes detected

```{r}
prevalence_table_ind_sp_f1_comb_f2_f3_f4 = prevalence_table_ind_sp_f1_comb_f2_f3 %>% filter_all(any_vars(. != 0)) %>% as.data.frame()

metadata_combs_uniq = metadata_combs_uniq[metadata_combs_uniq$comb %in% rownames(prevalence_table_ind_sp_f1_comb_f2_f3_f4),]
```

## Heatmaps

### Generation

```{r}
#Get Lateral annotation (left)
#N individuals
#Set leyend breaks
n_ind_breaks = c(5,10,20,40,60,80,100, 200, 300, 400,500)
#Get info for each group
n_inds_info=c()
for (comb in rownames(prevalence_table_ind_sp_f1_comb_f2_f3_f4)) {
  temp_info = metadata_combs_uniq[metadata_combs_uniq$comb==comb,"n_individuals"]
  n_inds_info = c(n_inds_info, temp_info)
}
#Set lateral info
left_info <-ComplexHeatmap::rowAnnotation(`Individuals\nNumber`=anno_numeric(n_inds_info,
                                          bg_gp = gpar(fill = "#FFFF9F", col = "#c3b59b"),
                                          align_to = "right"), annotation_name_rot = 0)


#Get Lateral annotations(right)

##continent
#Get info for each group
continent_info=c()
for (comb in rownames(prevalence_table_ind_sp_f1_comb_f2_f3_f4)) {
  temp_info = metadata_combs_uniq[metadata_combs_uniq$comb==comb,"continent"]
  continent_info = c(continent_info, temp_info)
}
#Get leyend and colors
leyend_uniq_continents=na.exclude(unique(continent_info))
continent_colors=colorRampPalette(hcl.colors(5, palette="Spectral"))(length(leyend_uniq_continents))
names(continent_colors)=leyend_uniq_continents

##host_lifestyle
#Get info for each group
lifestyle_info=c()
for (comb in rownames(prevalence_table_ind_sp_f1_comb_f2_f3_f4)) {
  temp_info = metadata_combs_uniq[metadata_combs_uniq$comb==comb,"host_lifestyle"]
  lifestyle_info = c(lifestyle_info, temp_info)
}
#Get leyend and colors
lifestyle_colors = c("Wild"="#40B0A6", "Intermediate" = "#E1BE6A","Captive"="#e17084")

##Primate group
#Get info for each group
pgroup_info=c()
for (comb in rownames(prevalence_table_ind_sp_f1_comb_f2_f3_f4)) {
  temp_info = metadata_combs_uniq[metadata_combs_uniq$comb==comb,"primate_group"]
  pgroup_info = c(pgroup_info, temp_info)
}
#Get leyend and colors
leyend_uniq_pgroups=na.exclude(unique(pgroup_info))
pgroups_colors=colorRampPalette(hcl.colors(6, palette="PIYG"))(length(leyend_uniq_pgroups))
names(pgroups_colors)=leyend_uniq_pgroups

##Sequencing_depth
#Get info for each group
reads_info=c()
for (comb in rownames(prevalence_table_ind_sp_f1_comb_f2_f3_f4)) {
  temp_info = metadata_combs_uniq[metadata_combs_uniq$comb==comb,"avg"]
  reads_info = c(reads_info, temp_info)
}
reads_info = as.integer(reads_info / 1000000)


##Include annotations
lateral_info <-ComplexHeatmap::rowAnnotation(Lifestyle=lifestyle_info, Continent=continent_info, 
                                             `Primate groups` = pgroup_info,
                                             `Sequencing depth\nmean group\nx10⁶`=anno_numeric(reads_info, bg_gp = gpar(fill = "#96dcf0", 
                                                                                                                        col = "#c3b59b"),align_to = "left"),
                                             gp = grid::gpar(col ="black"),
                                             col=list(Continent=continent_colors, Lifestyle=lifestyle_colors, `Primate groups`=pgroups_colors),
                                             annotation_legend_param=list(Lifestyle=list(at=names(lifestyle_colors),nrow=1,labels_gp = gpar(fontsize = 14), title_gp = gpar(fontsize = 16)),
                                                                          Continent=list(at=names(continent_colors),nrow=1,labels_gp = gpar(fontsize = 14), title_gp = gpar(fontsize = 16)),
                                                                          `Primate groups`=list(at=names(pgroups_colors),nrow=1,labels_gp = gpar(fontsize = 14), title_gp = gpar(fontsize = 16))
                                                                          )
                                             )

#Set color palette
color_cor=c("#5E4FA2","#3288BD","#3288BD","#3288BD","#3288BD","#FEE08B","#FEE08B","#FEE08B","#F46D43","#F46D43","#9E0142")

#htA1(GLOBAL)
##Get initial heatmap
htA1<-ComplexHeatmap::Heatmap(prevalence_table_ind_sp_f1_comb_f2_f3_f4,
                              heatmap_legend_param=list(title="Prevalence",at=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),direction = "horizontal",labels_gp = gpar(fontsize = 14), title_gp = gpar(fontsize = 16)),
                              show_column_names = TRUE, 
                              column_title_side = "bottom", 
                              row_names_max_width = unit(15, "cm"),border_gp = grid::gpar(col = "black", lty = 1),
                              column_names_max_height = unit(15, "cm"),
                              col = color_cor,rect_gp = grid::gpar(col = "black", lwd = 2), 
                              right_annotation = lateral_info, left_annotation = left_info,
                              cluster_row_slices = FALSE,
                              cell_fun=function(j, i, x, y, w, h, col) { 
                                if(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j] > 0) 
                                  grid.text(round(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j],2), x, y,gp = gpar(fontsize = 7))
                                })
##Convert to ggplot
gb_htA1= grid.grabExpr(draw(htA1,heatmap_legend_side = "bottom"))
gg_htA1=ggpubr::as_ggplot(gb_htA1)

#htA6(BY specie)
#Get info for each group
specie_info=c()
for (comb in rownames(prevalence_table_ind_sp_f1_comb_f2_f3_f4)) {
  temp_info = metadata_combs_uniq[metadata_combs_uniq$comb==comb,"host_specie"]
  specie_info = c(specie_info, temp_info)
}

##Get initial heatmap
htA2<-ComplexHeatmap::Heatmap(prevalence_table_ind_sp_f1_comb_f2_f3_f4,
                              heatmap_legend_param=list(title="Prevalence",at=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),direction = "horizontal",labels_gp = gpar(fontsize = 14), title_gp = gpar(fontsize = 16)),
                              show_column_names = TRUE, row_title_rot = 0,
                              column_title_side = "bottom", 
                              row_names_max_width = unit(15, "cm"),border_gp = grid::gpar(col = "black", lty = 1),
                              column_names_max_height = unit(15, "cm"),
                              col = color_cor,rect_gp = grid::gpar(col = "black", lwd = 2), 
                              right_annotation = lateral_info, left_annotation = left_info,
                              row_split=factor(specie_info, levels = unique(specie_info)),
                              cluster_row_slices = FALSE,
                              cell_fun=function(j, i, x, y, w, h, col) { 
                                if(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j] > 0) 
                                  grid.text(round(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j],2), x, y,gp = gpar(fontsize = 7))
                                })
##Convert to ggplot
gb_htA2= grid.grabExpr(draw(htA2,heatmap_legend_side = "bottom"))
gg_htA2=ggpubr::as_ggplot(gb_htA2)



#htA3(BY lifestyle)
##Get initial heatmap
htA3<-ComplexHeatmap::Heatmap(prevalence_table_ind_sp_f1_comb_f2_f3_f4,
                              heatmap_legend_param=list(title="Prevalence",at=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),direction = "horizontal",labels_gp = gpar(fontsize = 14), title_gp = gpar(fontsize = 16)),
                              show_column_names = TRUE, 
                              column_title_side = "bottom", 
                              row_names_max_width = unit(15, "cm"),border_gp = grid::gpar(col = "black", lty = 1),
                              column_names_max_height = unit(15, "cm"),
                              col = color_cor,rect_gp = grid::gpar(col = "black", lwd = 2), 
                              right_annotation = lateral_info, left_annotation = left_info,
                              row_split=factor(lifestyle_info, levels = names(lifestyle_colors)),
                              cluster_row_slices = FALSE,
                              cell_fun=function(j, i, x, y, w, h, col) { 
                                if(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j] > 0) 
                                  grid.text(round(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j],2), x, y,gp = gpar(fontsize = 7))
                                })
##Convert to ggplot
gb_htA3= grid.grabExpr(draw(htA3,heatmap_legend_side = "bottom"))
gg_htA3=ggpubr::as_ggplot(gb_htA3)

#htA5(BY Continent)
##Get initial heatmap
htA4<-ComplexHeatmap::Heatmap(prevalence_table_ind_sp_f1_comb_f2_f3_f4,
                              heatmap_legend_param=list(title="Prevalence",at=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),direction = "horizontal",labels_gp = gpar(fontsize = 14), title_gp = gpar(fontsize = 16)),
                              show_column_names = TRUE, 
                              column_title_side = "bottom", 
                              row_names_max_width = unit(15, "cm"),border_gp = grid::gpar(col = "black", lty = 1),
                              column_names_max_height = unit(15, "cm"),
                              col = color_cor,rect_gp = grid::gpar(col = "black", lwd = 2), 
                              right_annotation = lateral_info, left_annotation = left_info,
                              row_split=factor(continent_info, levels = names(continent_colors)),
                              cluster_row_slices = FALSE,
                              cell_fun=function(j, i, x, y, w, h, col) { 
                                if(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j] > 0) 
                                  grid.text(round(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j],2), x, y,gp = gpar(fontsize = 7))
                                })
##Convert to ggplot
gb_htA4= grid.grabExpr(draw(htA4,heatmap_legend_side = "bottom"))
gg_htA4=ggpubr::as_ggplot(gb_htA4)

#htA6(BY country)
#Get info for each group
country_info=c()
for (comb in rownames(prevalence_table_ind_sp_f1_comb_f2_f3_f4)) {
  temp_info = metadata_combs_uniq[metadata_combs_uniq$comb==comb,"country"]
  country_info = c(country_info, temp_info)
}

##Get initial heatmap
htA5<-ComplexHeatmap::Heatmap(prevalence_table_ind_sp_f1_comb_f2_f3_f4,
                              heatmap_legend_param=list(title="Prevalence",at=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),direction = "horizontal",labels_gp = gpar(fontsize = 14), title_gp = gpar(fontsize = 16)),
                              show_column_names = TRUE, row_title_rot = 0,
                              column_title_side = "bottom", 
                              row_names_max_width = unit(15, "cm"),border_gp = grid::gpar(col = "black", lty = 1),
                              column_names_max_height = unit(15, "cm"),
                              col = color_cor,rect_gp = grid::gpar(col = "black", lwd = 2), 
                              right_annotation = lateral_info, left_annotation = left_info,
                              row_split=factor(country_info, levels = unique(country_info)),
                              cluster_row_slices = FALSE,
                              cell_fun=function(j, i, x, y, w, h, col) { 
                                if(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j] > 0) 
                                  grid.text(round(prevalence_table_ind_sp_f1_comb_f2_f3_f4[i, j],2), x, y,gp = gpar(fontsize = 7))
                                })
##Convert to ggplot
gb_htA5= grid.grabExpr(draw(htA5,heatmap_legend_side = "bottom"))
gg_htA5=ggpubr::as_ggplot(gb_htA5)
```

### Plots

#### Plot Global

```{r,fig.width=20,fig.height=20}
gg_htA1
```

```{r}
ggsave(gg_htA1,filename = "./Graficas/Eukdetect_prevalence_species_global.png",height = 20,width =20)
ggsave(gg_htA1,filename = "./Graficas/Eukdetect_prevalence_species_global.pdf",height = 20,width =20)
```

#### PLot by Specie

```{r,fig.width=20,fig.height=20}
gg_htA2
```

```{r}
ggsave(gg_htA2,filename = "./Graficas/Eukdetect_prevalence_species_species.png",height = 20,width =20)
ggsave(gg_htA2,filename = "./Graficas/Eukdetect_prevalence_species_species.pdf",height = 20,width =20)
```

#### PLot by Lifestyle

```{r,fig.width=20,fig.height=20}
gg_htA3
```

```{r}
ggsave(gg_htA3,filename = "./Graficas/Eukdetect_prevalence_species_lifestyle.png",height = 20,width =20)
ggsave(gg_htA3,filename = "./Graficas/Eukdetect_prevalence_species_lifestyle.pdf",height = 20,width =20)
```

#### PLot by Continent

```{r,fig.width=20,fig.height=20}
gg_htA4
```

```{r}
ggsave(gg_htA4,filename = "./Graficas/Eukdetect_prevalence_species_continent.png",height = 20,width =20)
ggsave(gg_htA4,filename = "./Graficas/Eukdetect_prevalence_species_continent.pdf",height = 20,width =20)
```

#### Plot by country

```{r,fig.width=20,fig.height=20}
gg_htA5
```

```{r}
ggsave(gg_htA5,filename = "./Graficas/Eukdetect_prevalence_species_country.png",height = 20,width =20)
ggsave(gg_htA5,filename = "./Graficas/Eukdetect_prevalence_species_country.pdf",height = 20,width =20)
```
